{
	"info": {
HW_3
		"_postman_id": "9b12c599-2a57-43f4-a856-7ad6ac56558b",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20489177"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверить, что в body приходит правильный string\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"let jsonData = pm.response.json()\r",
							"\r",
							"//Проверить, что name в ответе равно name s request \r",
							"\r",
							"pm.test(\"user_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Diana\");\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request\r",
							"\r",
							"pm.test(\"user_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"29\");\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request\r",
							"\r",
							"pm.test(\"user_salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"//Спарсить request\r",
							"\r",
							"let req = request.data\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"req_name\", function () {\r",
							"    pm.expect(req.name).to.deep.eql(jsonData.name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"pm.test(\"req_age\", function () {\r",
							"    pm.expect(req.age).to.deep.eql(jsonData.age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"req_salary\", function () {\r",
							"    pm.expect(+req.salary).to.deep.eql(jsonData.salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(jsonData.family)\r",
							"\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect((+req.salary) * 4).to.deep.eql(jsonData.family.u_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Diana",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
=======
		"_postman_id": "700ccfd0-2fc0-4689-b419-41fc70eebc0a",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Black_menthor",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}?name={{name}}&age={{age}}&salary={{salary}}&weight={{weight}}",
					"host": [
						"{{url}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						},
						{
							"key": "weight",
							"value": "{{weight}}"
						}
					]
 main
				}
			},
			"response": []
		}
	]
}